plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'edu.sc.seis.launch4j' version '2.5.0' // 최신 버전 확인 필요
}

group = 'com.my.app'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

/*
android {
    compileSdk = 34 // 최신 SDK 버전 사용

    defaultConfig {
        applicationId = "com.my.app" // 패키지명 설정
        minSdk = 24  // 최소 지원 안드로이드 버전 (Android 7.0 이상)
        targetSdk = 34 // 최신 SDK 사용
        versionCode = 1
        versionName = "1.0"
    }

    buildTypes {
        release {
            isMinifyEnabled = false
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
        }
    }
}
 */

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// ✅ JAR 파일 빌드 설정
tasks.named('bootJar') {
    archiveBaseName.set('MyJavaApp')
    archiveVersion.set('0.0.1')
}

// ✅ Launch4j 설정
launch4j {
    mainClassName = 'com.my.app.myjavaapp.Util.MainActivity'// 실행할 메인 클래스
    icon = "${projectDir}/src/main/resources/icon.ico" // 아이콘 (선택 사항)
    outputDir = "${buildDir}/exe" // EXE 파일 저장 경로
    outfile = "MyJavaApp.exe" // ✅ 파일명만 지정
    //  outfile = "${buildDir}/exe/MyJavaApp.exe" // EXE 파일 이름
    headerType = "gui" // GUI 모드 (콘솔 창 없음)
}

// ✅ Launch4j가 bootJar 이후 실행되도록 설정
tasks.named('launch4j') {
    dependsOn tasks.named('bootJar')

    doFirst {
        def jarFile = file("${buildDir}/libs/MyJavaApp-0.0.1.jar")
//        if (!jarFile.exists()) {
//            throw new GradleException("JAR 파일을 찾을 수 없습니다: ${jarFile}")
//        }
    }
}
